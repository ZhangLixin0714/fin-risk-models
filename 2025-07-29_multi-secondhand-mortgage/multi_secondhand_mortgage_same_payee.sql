{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "/* ==========================================================\n",
    "   Detect second-hand-housing loans that funnel funds to the\n",
    "   *same* individual payee account across many borrowers.\n",
    "   Author         : <your-github-handle>\n",
    "   As-of date     : :snapshot_date     -- e.g. '2025-07-28'\n",
    "   Years included : :year_list         -- e.g. ('2023','2024','2025')\n",
    "   ========================================================== */\n",
    "\n",
    "-- 1️⃣  Universe of active second-hand-housing loans\n",
    "WITH loan_bill AS (\n",
    "    SELECT *\n",
    "    FROM   core.loan_bill\n",
    "    WHERE  product_code        = 'MORTGAGE_SECOND_HAND'\n",
    "      AND  snapshot_date       = :snapshot_date\n",
    "      AND  EXTRACT(YEAR FROM lending_date) IN :year_list\n",
    "),\n",
    "\n",
    "-- 2️⃣  Contract header with pay-out account\n",
    "loan_account AS (\n",
    "    SELECT *\n",
    "    FROM   core.loan_account\n",
    "    WHERE  snapshot_date = :snapshot_date\n",
    "      AND  total_balance > 0\n",
    "),\n",
    "\n",
    "-- 3️⃣  Pay-out accounts serving an unusually high number of customers\n",
    "suspicious_payee AS (\n",
    "    SELECT   la.payee_account,\n",
    "             COUNT(DISTINCT lb.customer_id) AS borrower_cnt\n",
    "    FROM     loan_bill     lb\n",
    "    JOIN     loan_account  la  ON lb.contract_id = la.contract_id\n",
    "    WHERE    la.payee_account          IS NOT NULL\n",
    "      AND    la.payee_account_name     IS NOT NULL\n",
    "      AND    TRIM(la.payee_account_name) <> ''\n",
    "      AND    LENGTH(TRIM(la.payee_account_name)) <= 60   -- likely personal name\n",
    "    GROUP BY la.payee_account\n",
    "    HAVING   COUNT(DISTINCT lb.customer_id) > 10          -- red-flag threshold\n",
    ")\n",
    "\n",
    "-- 4️⃣  Final result enriched with business dimensions\n",
    "SELECT\n",
    "    lb.branch_id               AS branch_id,\n",
    "    lb.contract_id             AS contract_id,\n",
    "    lb.loan_sequence           AS loan_sequence,\n",
    "    lb.balance                 AS balance_local_ccy,\n",
    "    lb.lending_date,\n",
    "    lb.maturity_date,\n",
    "    la.loan_classification     AS regulatory_grade,\n",
    "    lb.product_code,\n",
    "    la.partner_org_id          AS partner_id,\n",
    "    cc.corporate_name          AS partner_name,\n",
    "    pj.project_code,\n",
    "    pj.project_name,\n",
    "    la.payee_account,\n",
    "    la.payee_account_name,\n",
    "    lb.customer_id,\n",
    "    cp.full_name               AS customer_name,\n",
    "    sp.borrower_cnt            AS shared_payee_borrowers\n",
    "FROM        loan_bill          lb\n",
    "JOIN        loan_account       la  ON lb.contract_id = la.contract_id\n",
    "LEFT JOIN   dim.partner_org    cc  ON la.partner_org_id = cc.partner_org_id\n",
    "LEFT JOIN   core.project       pj  ON la.project_id     = pj.project_id\n",
    "LEFT JOIN   dim.customer_prof  cp  ON lb.customer_id    = cp.customer_id\n",
    "JOIN        suspicious_payee   sp  ON la.payee_account  = sp.payee_account\n",
    "ORDER BY    sp.borrower_cnt DESC,\n",
    "            lb.lending_date;"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
